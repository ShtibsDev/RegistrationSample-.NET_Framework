<Application x:Class="RegistrationSample.OldDesktopUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:util="clr-namespace:RegistrationSample.OldDesktopUI.Utility"
             xmlns:vm="clr-namespace:RegistrationSample.OldDesktopUI.ViewModels"
             xmlns:views="clr-namespace:RegistrationSample.OldDesktopUI.Views">
    <Application.Resources>
        <DataTemplate DataType="{x:Type vm:ShellViewModel}">
            <views:ShellView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:LoginViewModel}">
            <views:LoginView/>
        </DataTemplate>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <util:BooleanToVisibilityInverseConverter x:Key="BoolToVisReversed"/>



        <Style x:Key="btn" TargetType="Button">
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Border Name="dropShadowBorder" CornerRadius="4" BorderBrush="Transparent" BorderThickness="0" Visibility="Hidden">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">
                                            <GradientStop Color="#22000000" Offset="0"/>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--default button highlight-->
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <!--inner drop shadow when pressed / checked-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="dropShadowBorder" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.60"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btn-default" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#333"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#ccc"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#e6e6e6"/>
                    <Setter Property="BorderBrush" Value="#adadad"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-primary" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#428bca"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#357ebd"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#3071a9"/>
                    <Setter Property="BorderBrush" Value="#285e8e"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-success" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#5cb85c"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#4cae4c"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#449d44"/>
                    <Setter Property="BorderBrush" Value="#398439"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-info" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#5bc0de"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#46b8da"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#31b0d5"/>
                    <Setter Property="BorderBrush" Value="#269abc"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-warning" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#f0ad4e"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#eea236"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#ec971f"/>
                    <Setter Property="BorderBrush" Value="#d58512"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="btn-danger" TargetType="Button" BasedOn="{StaticResource btn}">
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#fff"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#d9534f"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#d43f3a"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#c9302c"/>
                    <Setter Property="BorderBrush" Value="#ac2925"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="PasswordBox">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Grid>
                            <Border Name="bd" BorderThickness="1" CornerRadius="4" BorderBrush="#66afe9" Opacity="0">
                                <Border.Effect>
                                    <BlurEffect></BlurEffect>

                                </Border.Effect>
                            </Border>
                            <Border Name="container" Padding="{TemplateBinding Padding}" Height="{TemplateBinding Height}" BorderThickness="1" BorderBrush="#ccc" Background="#fff" CornerRadius="4" Margin="1">
                                <ScrollViewer Padding="0" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState Name="Normal"></VisualState>
                                    <VisualState Name="Focused">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="container" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.05" To="#66afe9"></ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetName="bd" Storyboard.TargetProperty="Opacity"
                                                            Duration="0:0:0.05" To="1"></DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="container" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.05" To="#eee"></ColorAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Border Name="bd" BorderThickness="1" CornerRadius="4" BorderBrush="#66afe9" Opacity="0">
                                <Border.Effect>
                                    <BlurEffect></BlurEffect>

                                </Border.Effect>
                            </Border>
                            <Border Name="container" Padding="{TemplateBinding Padding}" Height="{TemplateBinding Height}" BorderThickness="1" BorderBrush="#ccc" Background="#fff" CornerRadius="4" Margin="1">
                                <ScrollViewer Padding="0" x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState Name="Normal"></VisualState>
                                    <VisualState Name="Focused">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="container" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.05" To="#66afe9"></ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetName="bd" Storyboard.TargetProperty="Opacity"
                                                            Duration="0:0:0.05" To="1"></DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="container" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        Duration="0:0:0.05" To="#eee"></ColorAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
